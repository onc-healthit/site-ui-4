---
name: Create Build
on:
  push:
    branches:
      - deploy-github-action
  #    - main
  # pull_request:
  #   types: [opened, reopened, synchronize]
  #   branches:
  #     - dev
  #     - main

jobs:
  code-quality-check:
    name: Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install Dependencies
        run: npm ci --force
      - name: Lint
        run: npm run lint
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: code-quality-check
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install Dependencies
        run: npm ci --force
      - name: Run Build
        run: npm run build
      - name: Create Build Artifact
        run: |
          mkdir ./build
          cp ./.next -pR ./build/.next
          cp ./next.config.js ./build/next.config.js
          cp ./package.json ./build/package.json
          cp ./package-lock.json ./build/package-lock.json
      - name: Upload build folder
        uses: actions/upload-artifact@v4
        with:
          name: BuildArtifact
          path: ./build
          retention-days: 7
  deploy:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main'
    needs: build
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/development.key
          chmod 600 ~/.ssh/development.key
          cat >>~/.ssh/config <<END
          Host development
          HostName $SSH_HOST
          User $SSH_USERNAME
          IdentityFile ~/.ssh/development.key
          StrictHostKeyChecking no
          END
        env:
          SSH_PORT: ${{secrets.SSH_PORT}}
          SSH_HOST: ${{secrets.SSH_HOST}}
          SSH_USERNAME: ${{secrets.SSH_USERNAME}}
          SSH_KEY: ${{secrets.SSH_KEY}}
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: BuildArtifact
          path: ./
      - name: Copy Artifact to Environment
        run: |
          zip -r -o BuildArtifact.zip ./
          scp BuildArtifact.zip  development:
          ssh development 'ls -la'
      - name: Stop application
        run: |
          ssh development /bin/bash<< EOF
          sudo bash
          export PATH=$PATH:/root/.nvm/versions/node/v20.12.1/bin
          pm2 stop site-ui-4
          EOF
      - name: Update site-ui-4 files
        run: |
          ssh development /bin/bash<< EOF
          sudo bash
          ls -la
          unzip -o BuildArtifact.zip -d /opt/site-ui-4
          EOF
      - name: Restart application
        run: |
          ssh development /bin/bash<< EOF
          sudo bash
          export PATH=$PATH:/root/.nvm/versions/node/v20.12.1/bin
          pm2 startOrRestart /opt/site-ui-4/ecosystem.config.js --env production  && pm2 save
          EOF
